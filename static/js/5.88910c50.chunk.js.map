{"version":3,"sources":["components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","props","hasError","individerror","meta","error","submitFailed","touched","className","s","formControl","children","Textarea","input","restProps","child","element","Input","createField","placeholder","name","validators","component","type","text","validate","module","exports","maxLengthCreator","maxLength","value","length","required","withoutSpace","replace","DialogItem","dialog","active","activeClassName","to","id","Message","message","maxLengthCreator50","AddMessageFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","messagesForm","onSubmit","handleSubmit","Field","messagesFormField","messagesFormButton","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","d","key","messagesElements","messagesData","m","dialogs","dialogsItems","dialogsItemsTitle","messages","messagesItem","values","newMessageBody","sendMessage","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","mapDispatchToProps","sendMessageCreator","DialogsContainer","compose"],"mappings":"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","file":"static/js/5.88910c50.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './FormControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\n\r\n\r\nexport const FormControl = (props) => {\r\n  let hasError = null;\r\n  if (props.individerror === \"onSubmit\") {\r\n    hasError = props.meta.error && props.meta.submitFailed;\r\n  } else {\r\n    hasError = props.meta.error && props.meta.touched;\r\n  }\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>  \r\n      {hasError && <span>{props.meta.error}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, element, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps}></textarea>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, element, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}> \r\n      <input {...input} {...restProps}/>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, type, props = {}, text = \"\", individerror) => {\r\n  return (\r\n    <div>\r\n      <Field validate={validators} \r\n           name={name} type={type}\r\n           component={component} placeholder={placeholder}\r\n           {...props} individerror={individerror}/>\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3IXMz\",\"error\":\"FormControls_error__3E5dj\",\"formSummaryError\":\"FormControls_formSummaryError__3P5bD\",\"formSummaryErrorWrap\":\"FormControls_formSummaryErrorWrap__38Pki\",\"formSummaryErrorLoginBlock\":\"FormControls_formSummaryErrorLoginBlock__1YgxW\",\"formTitle\":\"FormControls_formTitle__3_-M5\",\"formInput\":\"FormControls_formInput__2BV47\",\"formMiniBlock\":\"FormControls_formMiniBlock__2YIh3\",\"formMiniBlockCheckbox\":\"FormControls_formMiniBlockCheckbox__3uvHG\",\"formCheckbox\":\"FormControls_formCheckbox__VxbrM\",\"formButtonLogin\":\"FormControls_formButtonLogin__2Z-E2\",\"captchaImg\":\"FormControls_captchaImg__r4E-Y\",\"captchaInput\":\"FormControls_captchaInput__2gvhJ\",\"formLogin\":\"FormControls_formLogin__KL1id\",\"LoginWrapperGlobal\":\"FormControls_LoginWrapperGlobal__M4yOr\",\"LoginH1\":\"FormControls_LoginH1__3uBaE\",\"testAccountWrapper\":\"FormControls_testAccountWrapper__38leW\",\"testAccountTitle\":\"FormControls_testAccountTitle__3B183\",\"testAccountDescr\":\"FormControls_testAccountDescr__2rhWd\",\"testAccountMiniBlock\":\"FormControls_testAccountMiniBlock__3ZYX2\",\"testAccountMiniBlockWrap\":\"FormControls_testAccountMiniBlockWrap__1m69t\",\"testAccountAttention\":\"FormControls_testAccountAttention__2wZP8\"};","\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value && value.length > maxLength) {\n    return `Max length is ${maxLength} symbols`;\n  } else {\n    return undefined;    \n  }\n}\n\nexport const required = value => {\n  if (value) {\n    return undefined;\n  } else {\n    return \"Field is required\";    \n  }\n}\n\nexport const withoutSpace = (value) => {\n  if (value) {\n    let str = value.replace(/\\s/g, '');\n    if (!str) {\n      return \"You entered only spaces\";\n    } else {\n      return undefined;\n    }\n  }\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__vTFkd\",\"dialogsItems\":\"Dialogs_dialogsItems__yi9B3\",\"active\":\"Dialogs_active__2uDiC\",\"dialogsItemsTitle\":\"Dialogs_dialogsItemsTitle__1PedL\",\"messages\":\"Dialogs_messages__2jyag\",\"messagesItem\":\"Dialogs_messagesItem__1WauQ\",\"messagesForm\":\"Dialogs_messagesForm__3gWkF\",\"messagesFormField\":\"Dialogs_messagesFormField__2F9BU\",\"messagesFormButton\":\"Dialogs_messagesFormButton__3o1tv\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\treturn (\r\n\t\t<div className={s.dialog + \" \" + s.active}>\r\n\t\t\t<NavLink activeClassName={s.active} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={s.message}>\r\n\t\t\t{props.message}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Field, reduxForm, reset} from 'redux-form';\r\nimport {Textarea} from '../../components/common/FormControls/FormControls';\r\nimport {required, maxLengthCreator, withoutSpace} from '../../utils/validators/validators';\r\n\r\n\r\nconst maxLengthCreator50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form className={s.messagesForm} onSubmit={props.handleSubmit}>\r\n      <div><Field className={s.messagesFormField} component={Textarea} \r\n      validate={[required, maxLengthCreator50, withoutSpace]}\r\n      name={\"newMessageBody\"}\r\n      individerror={\"onSubmit\"}\r\n      placeholder=\"Enter your message\" /></div>\r\n      <div><button className={s.messagesFormButton}>Send</button></div>\r\n   </form>\r\n  )\r\n}\r\n\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n  dispatch(reset('DialogAddMessageForm'));\r\n  \r\nconst AddMessageFormRedux = reduxForm({\r\n  form: 'DialogAddMessageForm',\r\n  onSubmitSuccess: afterSubmit\r\n})(AddMessageForm);\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogsData.map( d=> <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n  let messagesElements = state.messagesData.map( m => <Message message={m.message} key={m.id}/>);\r\n\r\n  let addNewMessage = (values) => {\r\n    (!!values.newMessageBody) && props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  return (\r\n   <div className={s.dialogs}>\r\n   \t<div className={s.dialogsItems}>\r\n      <div className={s.dialogsItemsTitle}>My friends:</div>\r\n      { dialogsElements }\r\n   \t</div>\r\n   \t<div className={s.messages}>\r\n      <div className={s.messagesItem}>{ messagesElements }</div>\r\n   \t\t<AddMessageFormRedux onSubmit={addNewMessage}/>\r\n   \t</div>\r\n   </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n\t\tisAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nlet withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n      return  (\r\n        <Component {...this.props}/>\r\n\t\t\t);\r\n    }\r\n\t}\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\nexport default withAuthRedirect;","import Dialogs from './Dialogs';\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer'; \r\nimport {connect} from 'react-redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\nlet mapDispatchToProps =  {\r\n  sendMessage: sendMessageCreator\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}