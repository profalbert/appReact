{"version":3,"sources":["components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/postImg.webp","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","props","hasError","individerror","meta","error","submitFailed","touched","className","s","formControl","children","Textarea","input","restProps","child","element","Input","createField","placeholder","name","validators","component","type","text","validate","module","exports","maxLengthCreator","maxLength","value","length","required","withoutSpace","replace","Post","item","src","postImg","alt","itemMessage","message","itemLikes","likesCount","maxLengthCreator10","MyPostsReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","formMyPosts","onSubmit","handleSubmit","Field","formMyPostsField","cols","rows","formMyPostsButton","MyPosts","React","memo","postsElements","posts","map","p","key","id","postsBlock","values","newPostText","addPost","reverse","mapDispatchToProps","addPostActionCreator","MyPostsContainer","connect","state","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","errorStatus","setErrorStatus","useEffect","ownerExpression","isOwner","authorizedUserId","match","params","userId","statusFromState","statusFromStateTitle","statusFromStateInput","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","catch","statusFromProps","onDoubleClick","ProfileData","contactsElements","Object","keys","profile","contacts","filter","contactTitle","contactValue","formInfo","formInfoTitle","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ContactMain","formButtonEdit","onClick","goToEditMode","ProfileDataFormReduxForm","profileForm","profileMiniBlock","profileMiniBlockCheckbox","Contact","profileFormButtonSave","s2","formSummaryErrorWrap","formSummaryError","ContactLink","target","rel","href","ProfileInfo","pCPreloaderBlock","pCPreloader","Preloader","descriptionBlock","photos","large","iconImg","file","files","savePhoto","htmlFor","initialValues","formData","saveProfile","then","Profile","content","ProfileContainer","isUserIdRedirect","activateEditMode","setState","this","setUserProfileThunk","getStatusThunk","setPhotosMeThunk","refreshProfile","prevProps","prevState","snapshot","to","isFetching","notFoundUser","savePhotoThunk","saveProfileThunk","updateStatusThunk","Component","compose","withRouter","auth","isAuth","usersPage"],"mappings":"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","file":"static/js/4.9801b462.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './FormControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\n\r\n\r\nexport const FormControl = (props) => {\r\n  let hasError = null;\r\n  if (props.individerror === \"onSubmit\") {\r\n    hasError = props.meta.error && props.meta.submitFailed;\r\n  } else {\r\n    hasError = props.meta.error && props.meta.touched;\r\n  }\r\n  return (\r\n    <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>  \r\n      {hasError && <span>{props.meta.error}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, element, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps}></textarea>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, element, ...restProps} = props;\r\n  return (\r\n    <FormControl {...props}> \r\n      <input {...input} {...restProps}/>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, type, props = {}, text = \"\", individerror) => {\r\n  return (\r\n    <div>\r\n      <Field validate={validators} \r\n           name={name} type={type}\r\n           component={component} placeholder={placeholder}\r\n           {...props} individerror={individerror}/>\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3IXMz\",\"error\":\"FormControls_error__3E5dj\",\"formSummaryError\":\"FormControls_formSummaryError__3P5bD\",\"formSummaryErrorWrap\":\"FormControls_formSummaryErrorWrap__38Pki\",\"formSummaryErrorLoginBlock\":\"FormControls_formSummaryErrorLoginBlock__1YgxW\",\"formTitle\":\"FormControls_formTitle__3_-M5\",\"formInput\":\"FormControls_formInput__2BV47\",\"formMiniBlock\":\"FormControls_formMiniBlock__2YIh3\",\"formMiniBlockCheckbox\":\"FormControls_formMiniBlockCheckbox__3uvHG\",\"formCheckbox\":\"FormControls_formCheckbox__VxbrM\",\"formButtonLogin\":\"FormControls_formButtonLogin__2Z-E2\",\"captchaImg\":\"FormControls_captchaImg__r4E-Y\",\"captchaInput\":\"FormControls_captchaInput__2gvhJ\",\"formLogin\":\"FormControls_formLogin__KL1id\",\"LoginWrapperGlobal\":\"FormControls_LoginWrapperGlobal__M4yOr\",\"LoginH1\":\"FormControls_LoginH1__3uBaE\",\"testAccountWrapper\":\"FormControls_testAccountWrapper__38leW\",\"testAccountTitle\":\"FormControls_testAccountTitle__3B183\",\"testAccountDescr\":\"FormControls_testAccountDescr__2rhWd\",\"testAccountMiniBlock\":\"FormControls_testAccountMiniBlock__3ZYX2\",\"testAccountMiniBlockWrap\":\"FormControls_testAccountMiniBlockWrap__1m69t\",\"testAccountAttention\":\"FormControls_testAccountAttention__2wZP8\"};","\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value && value.length > maxLength) {\n    return `Max length is ${maxLength} symbols`;\n  } else {\n    return undefined;    \n  }\n}\n\nexport const required = value => {\n  if (value) {\n    return undefined;\n  } else {\n    return \"Field is required\";    \n  }\n}\n\nexport const withoutSpace = (value) => {\n  if (value) {\n    let str = value.replace(/\\s/g, '');\n    if (!str) {\n      return \"You entered only spaces\";\n    } else {\n      return undefined;\n    }\n  }\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__tKWPT\",\"notFoundUser\":\"Profile_notFoundUser__2GZru\",\"pCPreloaderBlock\":\"Profile_pCPreloaderBlock__2hzdp\",\"pCPreloader\":\"Profile_pCPreloader__gMZDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__61rKU\",\"posts\":\"MyPosts_posts__3g6Qi\",\"formMyPosts\":\"MyPosts_formMyPosts__3I0Tz\",\"formMyPostsField\":\"MyPosts_formMyPostsField__2fTdO\",\"formMyPostsButton\":\"MyPosts_formMyPostsButton__1oSsF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__36nBg\",\"itemMessage\":\"Post_itemMessage__NGknN\",\"itemLikes\":\"Post_itemLikes__TWY18\"};","module.exports = __webpack_public_path__ + \"static/media/postImg.2c383599.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__bRlmF\",\"Contact\":\"ProfileInfo_Contact__HKjXw\",\"ContactMain\":\"ProfileInfo_ContactMain__3w6ne\",\"ContactLink\":\"ProfileInfo_ContactLink__3nMaE\",\"file\":\"ProfileInfo_file__HNWgP\",\"formButtonEdit\":\"ProfileInfo_formButtonEdit__CZKAC\",\"formInfo\":\"ProfileInfo_formInfo__3AJpe\",\"formInfoTitle\":\"ProfileInfo_formInfoTitle__2vJuw\",\"profileForm\":\"ProfileInfo_profileForm__35S3y\",\"profileMiniBlock\":\"ProfileInfo_profileMiniBlock__2YjzB\",\"profileMiniBlockCheckbox\":\"ProfileInfo_profileMiniBlockCheckbox__1ZHQf\",\"profileFormButtonSave\":\"ProfileInfo_profileFormButtonSave__3KkKV\",\"pCPreloaderBlock\":\"ProfileInfo_pCPreloaderBlock__1eosr\",\"pCPreloader\":\"ProfileInfo_pCPreloader__17HO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorStatus\":\"ProfileStatusWithHooks_errorStatus__1Z21o\",\"statusFromProps\":\"ProfileStatusWithHooks_statusFromProps__3EacN\",\"statusFromState\":\"ProfileStatusWithHooks_statusFromState__1PzQ0\",\"statusFromStateInput\":\"ProfileStatusWithHooks_statusFromStateInput__16Soi\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport postImg from '../../../../assets/postImg.webp';\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n   <div className={s.item}>\r\n    <img src={postImg} alt=\"img\"/>\r\n     <div className={s.itemMessage}>{props.message}</div>\r\n     <div>\r\n       <span className={s.itemLikes}>likes:</span> {props.likesCount}\r\n     </div>\r\n   </div>       \r\n  );\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm, reset} from 'redux-form';\r\nimport {Textarea} from '../../common/FormControls/FormControls';\r\nimport {required, maxLengthCreator, withoutSpace} from '../../../utils/validators/validators';\r\n\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10);\r\n\r\nconst AddPostNewForm = (props) => {\r\n  return (\r\n    <form className={s.formMyPosts} onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={\"newPostText\"}\r\n               className={s.formMyPostsField} \r\n               component={Textarea} \r\n               validate={[required, maxLengthCreator10, withoutSpace]}\r\n               placeholder={\"Post message\"}\r\n               individerror={\"onSubmit\"}\r\n               cols=\"30\" rows=\"2\"/>\r\n      </div> \r\n      <div>\r\n        <button className={s.formMyPostsButton}>Add post</button>\r\n      </div>        \r\n    </form>\r\n  );\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n  dispatch(reset('ProfileAddPostNewForm'));\r\n  \r\nconst MyPostsReduxForm = reduxForm({\r\n  form: 'ProfileAddPostNewForm',\r\n  onSubmitSuccess: afterSubmit,\r\n})(AddPostNewForm);\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map(p => \r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount}/> \r\n  );\r\n\r\n  let onAddPost = (values) => {\r\n    (!!values.newPostText) && props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n     <div className={s.postsBlock}>\r\n       <h3>My posts</h3>\r\n       <MyPostsReduxForm onSubmit={onAddPost}/>\r\n\r\n       <div className={s.posts}>\r\n         { postsElements.reverse() }\r\n       </div>\r\n     </div>        \r\n  );\r\n});\r\n\r\n\r\n// class MyPosts extends React.PureComponent {\r\n//   // shouldComponentUpdate(nextProps, nextState) {\r\n//   //   return nextProps !== this.props || nextState !== this.state;\r\n//   // }\r\n\r\n//   // // let newPostElement = React.createRef();\r\n//   // // let onAddPost = () => {\r\n//   // //   props.addPost();\r\n//   // // }\r\n\r\n//   // // let onPostChange = () => {\r\n//   // //   let text = newPostElement.current.value;\r\n//   // //   props.updateNewPostText(text);\r\n//   // // }\r\n\r\n//   render() {\r\n//     let postsElements = this.props.posts.map( p => \r\n//       <Post message={p.message} likesCount={p.likesCount}/> \r\n//     );\r\n//     let onAddPost = (values) => {\r\n//       this.props.addPost(values.newPostText);\r\n//     }\r\n  \r\n//     return (\r\n//        <div className={s.postsBlock}>\r\n//          <h3>My posts</h3>\r\n//          <MyPostsReduxForm onSubmit={onAddPost}/>\r\n  \r\n//          <div className={s.posts}>\r\n//            { postsElements.reverse() }\r\n//          </div>\r\n//        </div>        \r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\nexport default MyPosts;\r\n\r\n\r\n","import MyPosts from './MyPosts';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = {\r\n  addPost: addPostActionCreator\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileStatusWithHooks.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n  let [errorStatus, setErrorStatus] = useState(null);\r\n  \r\n  useEffect(() => { // срабатывает в самом конце компоненты\r\n    setStatus(props.status);\r\n  }, [props.status]); // определяется зависимость в []\r\n  // отрисовки (первый раз само, а дальше по зависимости)\r\n\r\n  let ownerExpression = props.isOwner || +props.authorizedUserId === +props.match.params.userId;\r\n\r\n  const activateMode = () => {\r\n    if(ownerExpression) {\r\n      setEditMode(true);\r\n    }\r\n  }\r\n  const deactivateEditMode = (e) => {\r\n    if (e.currentTarget.value.length <= 300) {\r\n      setEditMode(false);\r\n      props.updateStatus(status)\r\n      .catch((error) => {\r\n        setErrorStatus(error);\r\n      });\r\n    } \r\n  }  \r\n  const onStatusChange = (e) => {\r\n    if (e.currentTarget.value.length <= 301) {\r\n      setStatus(e.currentTarget.value);\r\n      setErrorStatus(null);\r\n    }\r\n    if (e.currentTarget.value.length === 301 || e.currentTarget.value.length > 301)  {\r\n      setErrorStatus(\"Max Status length is 300 symbols\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode\r\n      ? <div className={s.statusFromProps}>\r\n          <span onDoubleClick={activateMode}>\r\n            {props.status \r\n            ? `\"${props.status}\"` \r\n            : `\"no information\"`}\r\n          </span>\r\n        </div>\r\n      : <div className={s.statusFromState}>\r\n          <b className={s.statusFromStateTitle}>Status: </b>\r\n\r\n          {ownerExpression\r\n          && <input className={s.statusFromStateInput} onChange={onStatusChange} \r\n          autoFocus={true} \r\n          onBlur={deactivateEditMode} \r\n          value={status}></input>} \r\n\r\n          {errorStatus && <div className={s.errorStatus}>{errorStatus}</div> } \r\n        </div>}        \r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {createField, Input, Textarea} from '../../common/FormControls/FormControls';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport {reduxForm} from 'redux-form';\r\nimport s2 from \"../../common/FormControls/FormControls.module.css\";\r\nimport iconImg from '../../../assets/user.svg';\r\n\r\n\r\nconst noInfo = \"no information\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  let ownerExpression = props.isOwner || +props.authorizedUserId === +props.match.params.userId;\r\n\r\n  if(!props.profile) {\r\n    return (\r\n      <div className={s.pCPreloaderBlock}>\r\n        <div className={s.pCPreloader}>\r\n          <Preloader />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData)\r\n      .then(() => {\r\n        setEditMode(false);\r\n      });    \r\n  }\r\n  \r\n  const onMainPhotoSelected = (e) => {\r\n    if(e.target.files.length) {\r\n      props.savePhoto(e.target.files[0], props.authorizedUserId);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large !== null \r\n          ? props.profile.photos.large \r\n          : iconImg } alt=\"photos-user\"/>\r\n          \r\n        {ownerExpression \r\n        && <div className={s.file}>\r\n             <input id={\"inputFileImg\"} type={\"file\"} onChange={onMainPhotoSelected} />\r\n             <label htmlFor=\"inputFileImg\">Сhange photo</label>\r\n           </div>}\r\n\r\n        <ProfileStatusWithHooks status={props.status}\r\n                                isOwner={props.isOwner}\r\n                                authorizedUserId={props.authorizedUserId}\r\n                                match={props.match}\r\n                                updateStatus={props.updateStatus}/>\r\n\r\n        {editMode \r\n        ? <ProfileDataFormReduxForm profile={props.profile} initialValues={props.profile} onSubmit={onSubmit}/> \r\n        : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={props.profile} ownerExpression={ownerExpression}/>}       \r\n      \r\n      </div>      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst ProfileData = (props) => {\r\n  let arr = Object.keys(props.profile.contacts)\r\n  .filter(key => (props.profile.contacts[key] && key) || false);\r\n  let contactsElements = arr.map(key => <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>);\r\n  if (contactsElements.length === 0) {\r\n    contactsElements = false;\r\n  }\r\n\r\n  return (\r\n    <div className={s.formInfo}>      \r\n      <div className={s.formInfoTitle}>\r\n        <b>Full name: </b> {props.profile.fullName}\r\n      </div>\r\n      <div className={s.formInfoTitle}>\r\n        <b>Loking for a job: </b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {props.profile.lookingForAJob && \r\n        <div className={s.formInfoTitle}>\r\n          <b>My professional skills: </b> {props.profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n      <div className={s.formInfoTitle}>\r\n        <b>About me: </b> {props.profile.aboutMe || noInfo}\r\n      </div>\r\n      <div className={s.formInfoTitle}>\r\n        <b className={s.ContactMain}>Contacts: </b> {contactsElements || noInfo}\r\n      </div>\r\n      {props.ownerExpression && \r\n        <div>\r\n          <button className={s.formButtonEdit} onClick={props.goToEditMode}>Edit</button>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n  return (\r\n    <form className={s.profileForm} onSubmit={props.handleSubmit}>      \r\n      <div className={s.profileMiniBlock}>\r\n        <b>Full name: </b> \r\n        {createField(\"Full name\", \"fullName\", [], Input, \"text\")}\r\n      </div>\r\n      <div className={s.profileMiniBlock}>\r\n        <b>Loking for a job: </b>\r\n        <div className={s.profileMiniBlockCheckbox}>{createField(\"\", \"lookingForAJob\", [], Input, \"checkbox\")}</div>\r\n      </div>\r\n      <div className={s.profileMiniBlock}>\r\n        <b>My professional skills: </b>\r\n        {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea, \"text\")}          \r\n      </div>\r\n      <div className={s.profileMiniBlock}>\r\n        <b>About me: </b>\r\n        {createField(\"About me\", \"aboutMe\", [], Textarea, \"text\")}\r\n      </div>\r\n\r\n      <div className={s.profileMiniBlock}>\r\n        <b>Contacts: </b> {Object.keys(props.profile.contacts)\r\n        .map(key => <div key={key} className={s.Contact}>\r\n          <b>{key}:</b> {createField(key, \"contacts.\" + key, [], Input, \"text\")}\r\n        </div>)}\r\n      </div>\r\n\r\n      <div>\r\n        <button className={s.profileFormButtonSave}>Save</button>\r\n      </div>\r\n      {props.error \r\n      && <div className={s2.formSummaryErrorWrap}>\r\n           <div className={s2.formSummaryError}>{props.error}</div> \r\n         </div>\r\n      /*Общая ошибка, работает в PR, если там только _error */}\r\n    </form>\r\n  );\r\n}\r\nconst ProfileDataFormReduxForm =  reduxForm({\r\n  form: 'edit-profile'\r\n})(ProfileDataForm);\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return (\r\n    <div className={s.Contact}>\r\n      <b>{contactTitle}: </b>\r\n      <a className={s.ContactLink} target=\"_blank\" rel=\"noopener noreferrer\" href={contactValue}>\r\n        {contactValue}\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n   <div className={s.content}>\r\n     <ProfileInfo profile={props.profile}\r\n                  isOwner={props.isOwner}\r\n                  status={props.status}\r\n                  savePhoto={props.savePhoto}\r\n                  saveProfile={props.saveProfile}\r\n                  authorizedUserId={props.authorizedUserId}\r\n                  match={props.match}\r\n                  updateStatus={props.updateStatus} />\r\n                  \r\n     {( (+props.match.params.userId === +props.authorizedUserId) || (!props.match.params.userId) ) \r\n     && <MyPostsContainer />} \r\n   </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport {setUserProfileThunk, savePhotoThunk, saveProfileThunk,\r\n getStatusThunk, updateStatusThunk} from '../../redux/profile-reducer';\r\nimport {setPhotosMeThunk} from '../../redux/auth-reducer';\r\nimport {compose} from 'redux';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport s from './Profile.module.css';\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\tstate = {\r\n\t\tisUserIdRedirect: false,\r\n\t\teditMode: false\r\n\t}\t\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      isUserIdRedirect: true\r\n\t\t});\r\n  }\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif(!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif(!userId) {\r\n\t\t\t\tthis.activateEditMode();\r\n\r\n\t\t\t\t// this.props.history.push(\"/login\"); // аналог redirect, \r\n\t\t\t\t// //   но он внедряется в методы жизненных циклов, \r\n\t\t\t\t// //   поэтому лучше использовать реже такой вариант, \r\n\t\t\t\t// //   и вместо него использувать обычный redirect через jsx\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(userId) {\r\n\t\t\tthis.props.setUserProfileThunk(userId)\r\n\t\t\t.catch((error)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\teditMode: true\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\tthis.props.getStatusThunk(userId);\r\n\t\t\tthis.props.setPhotosMeThunk(this.props.authorizedUserId, true);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile();\r\n\t} \r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.isUserIdRedirect) return <Redirect to={'/login'} />;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{this.props.isFetching \r\n\t\t\t\t? <div className={s.pCPreloaderBlock}><div className={s.pCPreloader}><Preloader /></div></div>\r\n\t\t\t\t: (this.state.editMode ? <div className={s.notFoundUser}>Sorry, but something went wrong...</div> : <Profile {...this.props}\r\n\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\tauthorizedUserId={this.props.authorizedUserId}\r\n\t\t\t\tprofile={this.props.profile} \r\n\t\t\t\tstatus={this.props.status}\r\n\t\t\t\tsavePhoto={this.props.savePhotoThunk}\r\n\t\t\t\tsaveProfile={this.props.saveProfileThunk}\r\n\t\t\t\tupdateStatus={this.props.updateStatusThunk}/>) }\r\n\t\t\t</>\t\t \r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n\t\tprofile: state.profilePage.profile,\r\n\t\tstatus: state.profilePage.status,\r\n\t\tauthorizedUserId: state.auth.userId,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tisFetching: state.usersPage.isFetching\r\n  }\r\n}\r\nlet mapDispatchToProps = {\r\n\tsetUserProfileThunk,\r\n\tgetStatusThunk,\r\n\tupdateStatusThunk,\r\n\tsavePhotoThunk,\r\n\tsaveProfileThunk,\r\n\tsetPhotosMeThunk\r\n}\r\n\r\n\r\nexport default compose(\r\n\twithRouter,\r\n\tconnect(mapStateToProps, mapDispatchToProps)\r\n)(ProfileContainer);\r\n\r\n\r\n"],"sourceRoot":""}